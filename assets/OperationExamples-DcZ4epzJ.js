import{j as s}from"./jsx-runtime-DiklIkkE.js";const e={symbol:"df"},n=r=>({symbol:r}),S=(r,o)=>o>r.length?"no-key":r[o][0].symbol+o.toString(),f=({operations:r,setOperations:o,activeKey:y,setActiveKey:p})=>{const b=a=>{const t=[...r];t.splice(a,1),o(t)},d=a=>{const t=[...r],l=t[a],m={...l[0]};m.meta&&(delete m.meta.auto_clean,Object.keys(m.meta).length===0&&delete m.meta),t[a]=[m,...l.slice(1)],o(t)};return s.jsx("div",{className:"operations-list",children:r.map((a,t)=>{var c,g;const l=S(r,t),m=((c=a[0].meta)==null?void 0:c.auto_clean)===!0;return s.jsxs("div",{className:`operation-item default-operation ${y===l?"active":""} ${m?"auto_clean":""}`,onClick:()=>p(l),children:[s.jsxs("div",{className:"operation-content",children:[s.jsx("span",{className:"symbol",children:a[0].symbol}),s.jsx("span",{className:"arg",children:a[2]}),((g=a[0].meta)==null?void 0:g.clean_strategy)&&s.jsxs("span",{className:"clean-strategy",children:["Strategy: ",a[0].meta.clean_strategy]}),m&&s.jsx("button",{className:"preserve-button",onClick:i=>{i.stopPropagation(),d(t)},title:"Preserve this cleaning operation",children:"preserve"})]}),s.jsx("button",{className:"delete-button",onClick:i=>{i.stopPropagation(),b(t)},children:"Ã—"})]},t)})})};f.__docgenInfo={description:"",methods:[],displayName:"OperationsList2",props:{operations:{required:!0,tsType:{name:"Array",elements:[{name:"union",raw:"OperationSingleColumn | OperationSingleArg | OperationTwoArg",elements:[{name:"tuple",raw:"[SymbolT, SymbolDf, string]",elements:[{name:"SymbolT"},{name:"SymbolDf"},{name:"string"}]},{name:"tuple",raw:"[SymbolT, SymbolDf, string, Atom]",elements:[{name:"SymbolT"},{name:"SymbolDf"},{name:"string"},{name:"union",raw:"number | string | SymbolT | ColEnumArgs",elements:[{name:"number"},{name:"string"},{name:"SymbolT"},{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"}]}]},{name:"tuple",raw:"[SymbolT, SymbolDf, string, Atom, Atom]",elements:[{name:"SymbolT"},{name:"SymbolDf"},{name:"string"},{name:"union",raw:"number | string | SymbolT | ColEnumArgs",elements:[{name:"number"},{name:"string"},{name:"SymbolT"},{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"}]},{name:"union",raw:"number | string | SymbolT | ColEnumArgs",elements:[{name:"number"},{name:"string"},{name:"SymbolT"},{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"}]}]}]}],raw:"Operation[]"},description:""},setOperations:{required:!0,tsType:{name:"signature",type:"function",raw:"(newCommands: Operation[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"union",raw:"OperationSingleColumn | OperationSingleArg | OperationTwoArg",elements:[{name:"tuple",raw:"[SymbolT, SymbolDf, string]",elements:[{name:"SymbolT"},{name:"SymbolDf"},{name:"string"}]},{name:"tuple",raw:"[SymbolT, SymbolDf, string, Atom]",elements:[{name:"SymbolT"},{name:"SymbolDf"},{name:"string"},{name:"union",raw:"number | string | SymbolT | ColEnumArgs",elements:[{name:"number"},{name:"string"},{name:"SymbolT"},{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"}]}]},{name:"tuple",raw:"[SymbolT, SymbolDf, string, Atom, Atom]",elements:[{name:"SymbolT"},{name:"SymbolDf"},{name:"string"},{name:"union",raw:"number | string | SymbolT | ColEnumArgs",elements:[{name:"number"},{name:"string"},{name:"SymbolT"},{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"}]},{name:"union",raw:"number | string | SymbolT | ColEnumArgs",elements:[{name:"number"},{name:"string"},{name:"SymbolT"},{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"}]}]}]}],raw:"Operation[]"},name:"newCommands"}],return:{name:"void"}}},description:""},activeKey:{required:!0,tsType:{name:"string"},description:""},setActiveKey:{required:!0,tsType:{name:"ReactDispatch",raw:"React.Dispatch<React.SetStateAction<string>>",elements:[{name:"ReactSetStateAction",raw:"React.SetStateAction<string>",elements:[{name:"string"}]}]},description:""}}};const u=[[n("dropcol"),e,"col1"],[n("fillna"),e,"col2",5],[n("resample"),e,"month","monthly",{}]],A=[...u,[n("dropcol"),e,"col3"],[n("fillna"),e,"col4",10],[n("resample"),e,"year","yearly",{}]],_=[[{symbol:"fillna",meta:{auto_clean:!0,clean_strategy:"light-int"}},e,"fruit-type",5],[{symbol:"remove_outliers",meta:{auto_clean:!0,clean_strategy:"light-int"}},e,"col1",.1],[{symbol:"format_us_date",meta:{clean_strategy:"aggressive"}},e,"probably_dates"],...u],w={dropcol:[n("dropcol"),e,"col"],fillna:[n("fillna"),e,"col",8],remove_outliers:[n("remove_outliers"),e,"col",.02],search:[n("search"),e,"col","term"],format_us_date:[n("format_us_date"),e,"col"],resample:[n("resample"),e,"col","monthly",{}]},T={dropcol:[null],fillna:[[3,"fillVal","type","integer"]],remove_outliers:[[3,"tail","type","float"]],search:[[3,"needle","type","string"]],resample:[[3,"frequency","enum",["daily","weekly","monthly"]],[4,"colMap","colEnum",["null","sum","mean","count"]]]},O={argspecs:T,defaultArgs:w};export{f as O,O as b,_ as d,S as g,A as m,u as s};

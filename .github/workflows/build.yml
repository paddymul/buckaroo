name: Build

on:
  push:
    branches: main
  pull_request:
    branches: "*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]
        python-version: ["3.9"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: yarn

      - name: Install dependencies
        run: |
          python -m pip install -U codecov
          npm install -g codecov

      - name: Check docs can be build + links
        if: ${{ matrix.os == 'ubuntu-latest' }}
        working-directory: docs
        run: |
          sudo apt install -y pandoc graphviz
          pip install sphinx==7.1.2 pytest-check-links graphviz==0.20.1
          make html
          python -m pytest --check-links

      - name: Test the extension
        run: |
          python -m pip install --upgrade -v -e ".[test, examples, docs]"
          python -m pytest tests/unit
          yarn run test

      - name: Linting
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          yarn run lint:check
          pip install ruff
          ruff check . 

      - name: Package
        run: |
          python -m pip install build
          python -m build .

      - name: Upload builds
        uses: actions/upload-artifact@v4
        with:
          name: buckaroo-dist-${{ github.run_number }}
          path: |
            ./dist
            ./js/*.tgz


  ui-test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: buckaroo-dist-${{ github.run_number }}

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Setup buckaroo ui test
        run: pip install `echo dist/*.whl`[ui-test] -r requirements-ui-test.txt

      - name: Install playwright browsers
        run: playwright install chromium

      - name: Run ui-tests
        run: SOLARA_TEST_RUNNERS=jupyter_lab pytest tests/ui/ --video=retain-on-failure

      - name: Upload Test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: buckaroo-test-results-${{ github.run_number }}
          path: test-results

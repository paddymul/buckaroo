[build-system]
requires = [
    "hatchling",
    "jupyterlab~=4.0",
]
build-backend = "hatchling.build"

[project]
name = "buckaroo"
description = "Buckaroo - GUI Data wrangling for pandas"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Paddy Mullen" },
]
keywords = [
    "IPython",
    "Jupyter",
    "Widgets",
    "pandas",
]
classifiers = [
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "anywidget >= 0.9.0",
    "graphlib_backport>=1.0.0",
    "fastparquet"
]

version = "0.10.4"


[project.license]
file = "LICENSE.txt"



[tool.uv]
dev-dependencies = [
    "anywidget[dev]>=0.9.0",
    "jupyterlab>=4.2.5",
    "ruff>=0.6.2",
    "polars>=1.5.0",
    "pandas>=1.3.5",
    "playwright",
    "pydantic>=2.5.2",
    "pyarrow",
    "polars[timezone]",
    "hypothesis>=6.88.1",
    "nbval>=0.9",
    "pytest-playwright",
    "solara",
    "solara[pytest]",
]


[project.optional-dependencies]
dev = ["watchfiles", "jupyterlab",     "anywidget[dev]>=0.9.0",]

test = [
    "nbval>=0.9",
    "pandas>=1.3.5",
    "pytest-cov>=3",
    "pytest>=6",
    "hypothesis>=6.88.1",
    "polars>=1.9",
    "polars[timezone]",
    "pydantic>=2.5.2",
    "pyarrow",
    "ruff",
    "anywidget",
    "nbstripout"
]
polars = ["polars>=1.0,<1.10",
       "polars[timezone]"
]
jupyterlab = ["jupyterlab>=3.6.0"]
notebook = ["notebook>=7.0.0"]


docs = [
    "sphinx>=1.5",
    "graphviz>=0.20.1",
    "pytest-check-links"
]

    
[project.urls]
Homepage = "https://github.com/paddymul/buckaroo"

[tool.hatch.build]
only-packages = true
artifacts = ["buckaroo/static/widget.js", "buckaroo/static/compiled.css", "scripts/hatch_build.py"]

[tool.hatch.build.hooks.custom]
path = "scripts/hatch_build.py"


[tool.hatch.envs.default]
installer = "uv"

# temporarily commenting out to simplify build closer to quak
# [tool.hatch.build.targets.wheel]
# include = [
#    "buckaroo/**/*.py",
#    "buckaroo/static/*",
# ]
# [tool.hatch.build.targets.wheel.force-include]
#    "packages/buckaroo-js-core/dist/style.css" = "packages/buckaroo-js-core/dist/style.css"



[tool.isort]
profile = "black"
known_first_party = [
    "buckaroo",
    "tests",
]
line_length = 80


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "docs/example-notebooks",
    "*.ipynb"
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["F401"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
# lispy.py is a vendored and slightly modified bit of code from Peter Norvig
# Anyone trying to understand it is recommended to read Peter Norvig's writings
# don't want to add extaneous diffs
"buckaroo/jlisp/lispy.py" = [
			  "E401", "F601",
			  "E701", "E702", "E703", "E712"]

"tests/unit/test_heuristic_lang.py" = [
"E712"
]

"tests/unit/jlisp/lispy_test.py" = [
"E712"
]
#__init__.py and widget utils does some bare excepts because it absolutely cannot error
#and give a non displayable dataframe
"buckaroo/__init__.py" = ["E722",
		          "F401",  #it's an __init__.py,  it needs to import unused imports
]

"buckaroo/widget_utils.py" = ["E722"]
"buckaroo/customizations/order_columns.py" = ["ALL"]

#used for safe_int
"buckaroo/customizations/all_transforms.py" = ["E722"] #bare except

"buckaroo/customizations/analysis.py" = [
				      "E741", #ambiguous variable name
				      "E722"] #bare except

#bare except used in a convience method for developer ergonomics
"tests/unit/commands/command_tests.py" = ["E722"] #bare except
"tests/unit/commands/polars_command_tests.py" = ["E722"] #bare except


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[dependency-groups]
datacompy = [
    "datacompy>=0.15.0",
]
